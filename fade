#!/bin/bash
cat << EOF
 _____ _    ____
|  ___/ \  |  _ \  ___
| |_ / _ \ | | | |/ _ \\
|  _/ ___ \| |_| |  __/
|_|/_/   \_\____/ \___|
EOF
echo Fully Automated Distribution enhanced
echo
echo Proudly written in nano
echo \(C\) 2020 FADe Developers
echo Under GNU GPL 3.0+
echo

if ( touch .test-fade-iswritable ) then
rm .test-fade-iswritable
else
echo This directory is non-writable!
echo Please run on another directory.
exit 1
fi

case $1 in
  init)
  ## should refactor with fade-linux.github.io link
	test -n "$FADE_PROJECT_NAME" || echo -n "Enter your project's name(in lower case alphabet, number, dash): "
	test -n "$FADE_PROJECT_NAME" || read FADE_PROJECT_NAME
	test -n "$FADE_PROJECT_DESC" || echo "What a awesome project!"
	test -n "$FADE_PROJECT_DESC" || echo -n "Enter your project's Description or full name(in one line): "
	test -n "$FADE_PROJECT_DESC" || read FADE_PROJECT_DESC
	test -n "$FADE_PROJECT_RUN" || echo -ne "How to run your project?\n $ "
	test -n "$FADE_PROJECT_RUN" || read FADE_PROJECT_RUN
	test -n "$FADE_PROJECT_DESC" || read FADE_PROJECT_DESC
	test -n "$FADE_PROJECT_VERSION" || echo -n "Enter your project's version: "
	test -n "$FADE_PROJECT_VERSION" || read FADE_PROJECT_VERSION
	test -n "$FADE_PROJECT_DEPENDS" || echo -n "(DEB) Enter your project's dependancy (default: systemd): "
	test -n "$FADE_PROJECT_DEPENDS" || read FADE_PROJET_DEPENDS
	test -n "$FADE_MAINTAINER_NAME" || echo -n "Enter Maintainer's Name: "
	test -n "$FADE_MAINTAINER_NAME" || read FADE_MAINTAINER_NAME
	test -n "$FADE_MAINTAINER_MAIL" || echo -n "Enter Maintainer's E-mail: "
	test -n "$FADE_MAINTAINER_MAIL" || read FADE_MAINTAINER_MAIL
	test -n "$FADE_PROJECT_WWW" || echo -n "Enter Project's Website (if any):"
	test -n "$FADE_PROJECT_WWW" || read FADE_PROJECT_WWW
	test -n "$FADE_PROJECT_WWW" || FADE_PROJECT_WWW="http://example.com"
	test -n "$FADE_PROJECT_BOOT" || echo -n "Do you wanna make your service run on boot? (1/0): "
	test -n "$FADE_PROJECT_BOOT" || read FADE_PROJECT_BOOT
	mkdir -p fadework/usr/lib/$FADE_PROJECT_NAME
	mkdir fadework/usr/bin
	cat >> fadework/usr/bin/$FADE_PROJECT_NAME << EOF
#!/bin/bash
if [ \$EUID -ne 0 ]; then
        echo "(FADe) To run this script securely, we need sudo privilege.";
fi
cd /usr/lib/$FADE_PROJECT_NAME
exec sudo -H -u $FADE_PROJECT_NAME $FADE_PROJECT_RUN \$@
EOF
	mkdir fadework/internal fadework/internal-sh
	cat >> fadework/internal/control << EOF
Package: $FADE_PROJECT_NAME
Version: $FADE_PROJECT_VERSION
Priority: optional
Architecture: all
Maintainer: $FADE_MAINTAINER_NAME <$FADE_MAINTAINER_MAIL>
Depends: systemd $FADE_PROJECT_DEPENDS
Homepage: $FADE_PROJECT_WWW
Description: $FADE_PROJECT_DESC
EOF
	cat >> fadework/internal/postinst << EOFA
#!/bin/bash
useradd -r -s /dev/null -g nogroup -d /usr/lib/$FADE_PROJECT_NAME -c "$FADE_PROJECT_DESC" $FADE_PROJECT_NAME
chown -R $FADE_PROJECT_NAME:root /usr/lib/$FADE_PROJECT_NAME
echo "$FADE_PROJECT_NAME v$FADE_PROJECT_VERSION by $FADE_MAINTAINER_NAME <$FADE_MAINTAINER_MAIL>"
echo "$FADE_PROJECT_DESC"

## You may delete this line, but if you love FADe, please don't remove it.
echo "Powered by Fully Automated Distribution enhanced (FADe)"

## Insert your post-install script here.
## If you need run as your user please use:
## sudo -H -u $FADE_PROJECT_NAME (COMMAND)

if [ "$FADE_PROJECT_BOOT" -ne "0" ]; then
cat >> /etc/systemd/system/$FADE_PROJECT_NAME.service << EOF
[Unit]
Description=$FADE_PROJECT_DESC

[Service]
Type=simple
User=$FADE_PROJECT_NAME
WorkingDirectory=/usr/lib/$FADE_PROJECT_NAME
ExecStart=/bin/bash -c "cd /usr/lib/$FADE_PROJECT_NAME;$FADE_PROJECT_RUN"
ExecStop=/usr/bin/killall -u $FADE_PROJECT_NAME

[Install]
WantedBy=multi-user.target
EOF
chmod 644 /etc/systemd/system/$FADE_PROJECT_NAME.service
systemctl daemon-reload
systemctl start $FADE_PROJECT_NAME
systemctl enable $FADE_PROJECT_NAME
fi
EOFA
	cat >> fadework/internal/prerm << EOFA
#!/bin/bash

## Insert your pre-remove script here.
## If you need run as your user please use:
## sudo -H -u $FADE_PROJECT_NAME (COMMAND)

if [ "$FADE_PROJECT_BOOT" -ne "0" ]; then
systemctl disable $FADE_PROJECT_NAME
systemctl stop $FADE_PROJECT_NAME
rm /etc/systemd/system/$FADE_PROJECT_NAME.service
systemctl daemon-reload
rm /usr/bin/$FADE_PROJECT_NAME
fi
userdel $FADE_PROJECT_NAME
EOFA
	cat >> fadework/internal-sh/install << EOFA
#!/bin/bash
if [ \$EUID -ne 0 ]; then
        echo "This script should run on root.";
        echo "Trying to launch self with sudo...";
        exec sudo \$0
fi
useradd -r -s /dev/null -g nogroup -d /usr/lib/$FADE_PROJECT_NAME -c "$FADE_PROJECT_DESC" $FADE_PROJECT_NAME
echo "$FADE_PROJECT_NAME v$FADE_PROJECT_VERSION by $FADE_MAINTAINER_NAME <$FADE_MAINTAINER_MAIL>"
echo "$FADE_PROJECT_DESC"
test -d /usr/lib/$FADE_PROJECT_NAME || mkdir /usr/lib/$FADE_PROJECT_NAME
chown -R $FADE_PROJECT_NAME:root /usr/lib/$FADE_PROJECT_NAME
tar -C / -xzf data.tar.gz

## You may delete this line, but if you love FADe, please don't remove it.
echo "Powered by Fully Automated Distribution enhanced (FADe)"

## Insert your post-install script here.
## If you need run as your user please use:
## sudo -H -u $FADE_PROJECT_NAME (COMMAND)

if [ "$FADE_PROJECT_BOOT" -ne "0" ]; then
cat >> /etc/systemd/system/$FADE_PROJECT_NAME.service << EOF
[Unit]
Description=$FADE_PROJECT_DESC

[Service]
Type=simple
User=$FADE_PROJECT_NAME
WorkingDirectory=/usr/lib/$FADE_PROJECT_NAME
ExecStart=/bin/bash -c "cd /usr/lib/$FADE_PROJECT_NAME;$FADE_PROJECT_RUN"
ExecStop=/usr/bin/killall -u $FADE_PROJECT_NAME

[Install]
WantedBy=multi-user.target
EOF
chmod 644 /etc/systemd/system/$FADE_PROJECT_NAME.service
systemctl daemon-reload
systemctl start $FADE_PROJECT_NAME
systemctl enable $FADE_PROJECT_NAME
fi
EOFA
chmod 755 fadework/internal-sh/install
chmod 755 fadework/internal/postinst
chmod 755 fadework/internal/prerm
chmod 755 fadework/usr/bin/$FADE_PROJECT_NAME
echo
cp fadework/internal/prerm fadework/internal-sh/uninstall
  cat << EOF
Please move your hard work to fadework/usr/lib/$FADE_PROJECT_NAME.
If you ready, please run this script with your own option.
EOF
  ;;
  buildsh)
	test -d fadework || echo "Please do $0 init first."
	test -d fadework || exit 1
	test -f project-dist.tar.gz && rm project-dist.tar.gz
	cd fadework
	test -f internal-sh/data.tar.gz && rm internal-sh/data.tar.gz
	tar --owner=0 --group=0 -czf internal-sh/data.tar.gz usr
	cd internal-sh
	tar --owner=0 --group=0 -czf ../../project-dist.tar.gz .
	rm data.tar.gz
	cd ../..
	echo "Done. Please check project-dist.tar.gz!"
;;
  builddeb)
	test -d fadework || echo "Please do $0 init first."
        test -d fadework || exit 1
	test -f project-dist.deb && rm project-dist.deb
        cd fadework
	echo '2.0'>debian-binary
	test -f control.tar.gz && rm control.tar.gz
        test -f data.tar.gz && rm data.tar.gz
	tar --owner=0 --group=0 -czf data.tar.gz usr
	cd internal
	tar --owner=0 --group=0 -czf ../control.tar.gz *
	cd ..
	ar r ../project-dist.deb debian-binary control.tar.gz data.tar.gz
	rm debian-binary control.tar.gz data.tar.gz
	cd ..
	echo "We created RAW Debian package (.deb)"
	echo "It can be installed on system, but if you needed"
	echo "Sign the package."
	echo ""
	echo "Done. Check project-dist.deb!"
;;
  *)
	cat << EOF
$0 help: Show this help.
$0 init: Create FADe Default Structure
$0 buildsh: Build Installable-shell script.
$0 builddeb: Build your own Debian Package.
$0 version: Show FADe's Version
EOF
esac
